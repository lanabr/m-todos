import matplotlib.pyplot as plt
import numpy as np

def f5(x):
    return 0.0411 + -0.1274*(x - 0.9659) + 0.7657*(x - 0.9659)*(x - 0.7071) + 1.1906*(x - 0.9659)*(x - 0.7071)*(x - 0.2588) + 0.7117*(x - 0.9659)*(x - 0.7071)*(x - 0.2588)*(x + 0.2588)

def f11(x):
    return 0.0391 + -0.0838*(x - 0.9914) + 0.1566*(x - 0.9914)*(x - 0.9239) + -0.3306*(x - 0.9914)*(x - 0.9239)*(x - 0.7934) + 0.9181*(x - 0.9914)*(x - 0.9239)*(x - 0.7934)*(x - 0.6088) + -2.4651*(x - 0.9914)*(x - 0.9239)*(x - 0.7934)*(x - 0.6088)*(x - 0.3827) + -16.0987*(x - 0.9914)*(x - 0.9239)*(x - 0.7934)*(x - 0.6088)*(x - 0.3827)*(x - 0.1305) + -31.0887*(x - 0.9914)*(x - 0.9239)*(x - 0.7934)*(x - 0.6088)*(x - 0.3827)*(x - 0.1305)*(x + 0.1305) + -35.8606*(x - 0.9914)*(x - 0.9239)*(x - 0.7934)*(x - 0.6088)*(x - 0.3827)*(x - 0.1305)*(x + 0.1305)*(x + 0.3827) + -28.6713*(x - 0.9914)*(x - 0.9239)*(x - 0.7934)*(x - 0.6088)*(x - 0.3827)*(x - 0.1305)*(x + 0.1305)*(x + 0.3827)*(x + 0.6088) + -14.9696*(x - 0.9914)*(x - 0.9239)*(x - 0.7934)*(x - 0.6088)*(x - 0.3827)*(x - 0.1305)*(x + 0.1305)*(x + 0.3827)*(x + 0.6088)*(x + 0.7934)

def f15(x):
    return 0.0388 + -0.0793*(x - 0.9952) + 0.1308*(x - 0.9952)*(x - 0.9569) + -0.2152*(x - 0.9952)*(x - 0.9569)*(x - 0.8819) + 0.3889*(x - 0.9952)*(x - 0.9569)*(x - 0.8819)*(x - 0.773) + -0.8194*(x - 0.9952)*(x - 0.9569)*(x - 0.8819)*(x - 0.773)*(x - 0.6344) + 1.8924*(x - 0.9952)*(x - 0.9569)*(x - 0.8819)*(x - 0.773)*(x - 0.6344)*(x - 0.4714) + 1.7047*(x - 0.9952)*(x - 0.9569)*(x - 0.8819)*(x - 0.773)*(x - 0.6344)*(x - 0.4714)*(x - 0.2903) + -38.1501*(x - 0.9952)*(x - 0.9569)*(x - 0.8819)*(x - 0.773)*(x - 0.6344)*(x - 0.4714)*(x - 0.2903)*(x - 0.098) + -132.9186*(x - 0.9952)*(x - 0.9569)*(x - 0.8819)*(x - 0.773)*(x - 0.6344)*(x - 0.4714)*(x - 0.2903)*(x - 0.098)*(x + 0.098) + -240.6167*(x - 0.9952)*(x - 0.9569)*(x - 0.8819)*(x - 0.773)*(x - 0.6344)*(x - 0.4714)*(x - 0.2903)*(x - 0.098)*(x + 0.098)*(x + 0.2903) + -300.9409*(x - 0.9952)*(x - 0.9569)*(x - 0.8819)*(x - 0.773)*(x - 0.6344)*(x - 0.4714)*(x - 0.2903)*(x - 0.098)*(x + 0.098)*(x + 0.2903)*(x + 0.4714) + -286.9321*(x - 0.9952)*(x - 0.9569)*(x - 0.8819)*(x - 0.773)*(x - 0.6344)*(x - 0.4714)*(x - 0.2903)*(x - 0.098)*(x + 0.098)*(x + 0.2903)*(x + 0.4714)*(x + 0.6344) + -212.661*(x - 0.9952)*(x - 0.9569)*(x - 0.8819)*(x - 0.773)*(x - 0.6344)*(x - 0.4714)*(x - 0.2903)*(x - 0.098)*(x + 0.098)*(x + 0.2903)*(x + 0.4714)*(x + 0.6344)*(x + 0.773) + -108.9396*(x - 0.9952)*(x - 0.9569)*(x - 0.8819)*(x - 0.773)*(x - 0.6344)*(x - 0.4714)*(x - 0.2903)*(x - 0.098)*(x + 0.098)*(x + 0.2903)*(x + 0.4714)*(x + 0.6344)*(x + 0.773)*(x + 0.8819)

def f(x):
    return 1 / (1 + 25 * pow(x, 2))

def main():
    x1 = np.arange(-1, 1, 0.001)
    y1 = []
    for i in range(0, len(x1)):
        y1.append(f5(x1[i]))

    x2 = np.arange(-1, 1, 0.001)
    y2 = []
    for i in range(0, len(x2)):
        y2.append(f11(x2[i]))

    x3 = np.arange(-1, 1, 0.001)
    y3 = []
    for i in range(0, len(x3)):
        y3.append(f15(x3[i]))

    x4 = np.arange(-1, 1, 0.001)
    y4 = []
    for i in range(0, len(x4)):
        y4.append(f(x4[i]))

    plt.plot(x4, y4, 'k:', c='black', label='Função 1 / (1 + 25 * pow(x, 2))')
    plt.plot(x1, y1, 'k--', c='red', label='Polinomio com 5 pontos')
    plt.plot(x2, y2, 'k-', c='green', label='Polinomio com 11 pontos')
    plt.plot(x3, y3, 'k-.', c='blue', label='Polinomio com 15 pontos')

    plt.legend(loc='upper left')

    plt.xlim(-1, 1)
    plt.ylim(0, 1.25)

    plt.title('Função ii) 1 / (1 + 25 * pow(x, 2)) com nós de Chebyshev')

    plt.show()

if __name__ == '__main__':
    main()
